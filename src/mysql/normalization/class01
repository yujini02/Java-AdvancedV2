관계형 데이터베이스는 데이터삽입, 삭제, 수정 시 발생할 수 있는 데이터의 불일치, 오류가 발생할 수 있다.
이런 현상을 이상(Anomaly)
- 삽입이상(Inseration Anomaly)
  데이터를 삽입할 때 발생하는 이상
  원하지 않는 불필요한 데이터를 반복해서 입력해야 하는 경우

- 삭제이상 (Deletion Anomaly)
  데이터를 삭제할 때 발생하는 이상
  테이블에서 일부 레코드를 삭제하면 학제할 필요가 없는 다른 정보도 함께 삭제되는 경우

- 갱신(수정)이상 (Update Anomaly)
  데이터를 변경할때 발생하는 이상현상
  테이블의 일부 레코드의 값만 수정되어 데이터의 일관성이 깨지는 경우를 의미한다. 이로 인해 데이터 불일치성으로 무결성이 깨진다.

  이상현상을 정규화를 통해 해결한다.
  정규화란?
  데이터의 중복성과 종속성을 줄이는 방식
  정규화를 통해서 큰테이블을 작은테이블로 분해한다. 관계를 사용하여 관련된 테이블들 끼리 연결하는 방법

  정규화의 장점
  1. 데이터베이스 변경 시 이상현상을 제거할 수 있다.
  2. 정규화된 데이터베이스 구조에는 새로운 데이터형이 추가되어 확정되어도 , 구조를 변경하지 않아도 되며 , 일부만 변경하여 관리할 수 있다.
  3. 데이터베이스와 연동된 응용프로그램에서 최소한의 작업만으로도 원하는 정보를 가져올 수 있다.

  정규화의 단점
  1. 테이블의 분해로 인해 테이블간의 join 연산이 많아진다.
  2. 요청에 대한 응답시간이 느려질 수 있다.
  3. 조인이 많이 발생하여 성능저하시 반정규화(De-normalization)를 진행할 수 있다.

  함수적 종속성 (Functional Dependency)
  관계형 데이터베이스에서 릴레이션(테이블)에서 속성 간의 관계를 표현한 것 (FDD 로 표현함)

  동아리번호 -> 동아리명
  동아리번호 -> 동아리개설일
  {동아리번호, 학번} -> 동아리가입일
  학번 -> 이름
  학번 - > 학과번호
  학과번호 -> 학과명

  - 완전함수적 종속성
    기본키가 아닌 속성들이 기본키에 종속이 되는 종속관계를 의미함
    만약 기본키가 복합키인 경우
    기본키를 구성하는 속성 집합에 종속되어 있는 관계
    {동아리번호, 학번} => 복합키

  - 부분 함수적 종속성
   기본키가 아닌 속성들이 기본키의 일부에 종속된 관계를 의미함
   동아리명과 동아리개설일은 기본키인{}에서 기본키의 일부인 동아리번호 만으로도 결정될 수 있다.
   이름과 학과번호는 학번만으로도 결정될 수 있다.

  - 이행 함수적 종속성
    세 개 이상의 속성이 연결되어 있을 때 발생하는 종속 관계를 의미함

    정규화는 데이터베이스르 설계하는 데 있어 이상을 제거하여 데이터를 효율적으로 구조화 하는 과정이다.

    정규화를 통해서 일련의 규칙과 원칙을 적용하여 데이터를 구조화 하게 되면
    데이터 삽입, 삭제, 갱신 이상을 최소화 하며
    데이터의 중복을 줄이고
    데이터의 무결성을 강화하여 일관성을 유지할 수 있다.

    구조가 직관적이고 간결하여 데이터의 명확성이 확보되며 데이터를 검색하는데 효율적이고 유지 보수성이 향상된다.

    정규화
    1NF - 1정규형
    테이블의 각 속성값은 반복그룹(Repeating Group)이 없는 원자값(Atomic Value)으로만 구성되어야 한다.
    이를 위해 중복되는 속성이나 속성그룹을 별도의 테이블로 분리한다.

    2NF - 2정규형
    1NF형을 만족하면서 부분함수적 종속성을 제거한다.
    부분함수적 종속성이 존재하는 경우, 제거하기 위해 테이블을 분할 하거나 기본키를 변경하여 속성간의 종속성을 조정함

    3NF - 3정규형
    1NF - 2NF 를 만족하면서 테이블의 모든 (Non-key)속성은 기본키에만 종속되도록 조정하는 것
    테이블을 분할하여 독립시킨다.

    ================================
    BCNF (Boyce-Code NF)

    4NF

    5NF
